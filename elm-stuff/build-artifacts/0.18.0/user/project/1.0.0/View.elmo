var _user$project$View$wordListButton = function (wl) {
	var _p0 = function () {
		var _p1 = wl;
		switch (_p1.ctor) {
			case 'EasyWords':
				return {ctor: '_Tuple2', _0: 'Easy Words', _1: '499 short words'};
			case 'NormalWords':
				return {ctor: '_Tuple2', _0: 'Normal Words', _1: '499 medium words'};
			default:
				return {ctor: '_Tuple2', _0: 'Original Words', _1: '400 original words'};
		}
	}();
	var text_ = _p0._0;
	var title_ = _p0._1;
	var button_ = A2(
		_elm_lang$html$Html$input,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$type_('radio'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$title(title_),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$name('wordList'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(
							_user$project$Types$SetWordList(wl)),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$checked(
								_elm_lang$core$Native_Utils.eq(wl, _user$project$Types$NormalWords)),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		},
		{ctor: '[]'});
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: button_,
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html$text(text_),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$View$hintsButton = function (isHintsOn) {
	var myText = isHintsOn ? 'Hide Solutions' : 'View Solutions';
	var myStyle = _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: '110px'},
			_1: {ctor: '[]'}
		});
	return A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(_user$project$Types$ToggleHints),
			_1: {
				ctor: '::',
				_0: myStyle,
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(myText),
			_1: {ctor: '[]'}
		});
};
var _user$project$View$resetButton = A2(
	_elm_lang$html$Html$button,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Events$onClick(_user$project$Types$Reset),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: _elm_lang$html$Html$text('Reset'),
		_1: {ctor: '[]'}
	});
var _user$project$View$teamBackgroundColor = function (team) {
	var _p2 = team;
	if (_p2.ctor === 'Blue') {
		return '#ACC';
	} else {
		return '#E88';
	}
};
var _user$project$View$teamColor = function (t) {
	var _p3 = t;
	if (_p3.ctor === 'Blue') {
		return 'Blue';
	} else {
		return 'Red';
	}
};
var _user$project$View$remainingBox = F2(
	function (model, team) {
		var str = A2(
			F2(
				function (x, y) {
					return A2(_elm_lang$core$Basics_ops['++'], x, y);
				}),
			'Cards Remaining: ',
			_elm_lang$core$Basics$toString(
				A2(
					_user$project$State$cardsRemaining,
					model.board,
					_user$project$Types$Team(team))));
		var border = A2(
			_elm_lang$core$Basics_ops['++'],
			_elm_lang$core$Native_Utils.eq(model.turn, team) ? '3' : '1',
			A2(
				_elm_lang$core$Basics_ops['++'],
				'px solid ',
				_user$project$View$teamColor(team)));
		var myStyle = _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'width', _1: '478px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'height', _1: '48px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'border', _1: border},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'font-size', _1: '30px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'text-indent', _1: '10px'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'line-height', _1: '45px'},
										_1: {
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'background-color',
												_1: _user$project$View$teamBackgroundColor(team)
											},
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				}
			});
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: myStyle,
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(str),
				_1: {ctor: '[]'}
			});
	});
var _user$project$View$cardColor = function (o) {
	var _p4 = o;
	switch (_p4.ctor) {
		case 'Blank':
			return 'Gray';
		case 'KillWord':
			return 'Black';
		default:
			return _user$project$View$teamColor(_p4._0);
	}
};
var _user$project$View$cardStyle = F2(
	function (card, isGameOver) {
		var cursor = isGameOver ? 'default' : 'pointer';
		var displayColor = card.revealed ? _user$project$View$cardColor(card.cardType) : 'rgb(240,232,196)';
		var borderColor = card.mouseOver ? '#5AF' : 'Black';
		var fontColor = (card.revealed && _elm_lang$core$Native_Utils.eq(card.cardType, _user$project$Types$KillWord)) ? 'white' : 'black';
		return _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'cursor', _1: cursor},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'border',
						_1: A2(_elm_lang$core$Basics_ops['++'], '5px solid ', borderColor)
					},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'color', _1: fontColor},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background-color', _1: displayColor},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'height', _1: '90px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'width', _1: '180px'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'position', _1: 'relative'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'margin', _1: '1px'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '20px'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'line-height', _1: '270%'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'font-size', _1: '30px'},
																_1: {
																	ctor: '::',
																	_0: {ctor: '_Tuple2', _0: 'overflow', _1: 'hidden'},
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			});
	});
var _user$project$View$sash = function (cardType) {
	var myStyle = _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'content', _1: '\'\''},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'width', _1: '10px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'height', _1: '50px'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'transform', _1: 'rotate(45deg)'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'position', _1: 'absolute'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'left', _1: '8px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'top', _1: '-12px'},
									_1: {
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'background-color',
											_1: _user$project$View$cardColor(cardType)
										},
										_1: {ctor: '[]'}
									}
								}
							}
						}
					}
				}
			}
		});
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: myStyle,
			_1: {ctor: '[]'}
		},
		{ctor: '[]'});
};
var _user$project$View$cardNode = F4(
	function (v, card, hasHints, isGameOver) {
		var mySash = hasHints ? _user$project$View$sash(card.cardType) : _elm_lang$html$Html$text('');
		return A2(
			_elm_lang$html$Html$span,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_user$project$Types$Click(v)),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onMouseEnter(
						A2(_user$project$Types$MouseOverTile, true, v)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onMouseLeave(
							A2(_user$project$Types$MouseOverTile, false, v)),
						_1: {
							ctor: '::',
							_0: A2(_user$project$View$cardStyle, card, isGameOver),
							_1: {ctor: '[]'}
						}
					}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(card.word),
				_1: {
					ctor: '::',
					_0: mySash,
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$View$view = function (model) {
	var infoArea = A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(_user$project$View$remainingBox, model, _user$project$Types$Blue),
			_1: {
				ctor: '::',
				_0: A2(_user$project$View$remainingBox, model, _user$project$Types$Red),
				_1: {ctor: '[]'}
			}
		});
	var cardArea = A2(
		_user$project$Grid$render,
		F2(
			function (a, b) {
				return A4(_user$project$View$cardNode, a, b, model.hints, model.isGameOver);
			}),
		model.board);
	var wordListButtons = A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$View$wordListButton(_user$project$Types$EasyWords),
			_1: {
				ctor: '::',
				_0: _user$project$View$wordListButton(_user$project$Types$NormalWords),
				_1: {
					ctor: '::',
					_0: _user$project$View$wordListButton(_user$project$Types$OriginalWords),
					_1: {ctor: '[]'}
				}
			}
		});
	var menuButtons = A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$View$resetButton,
			_1: {
				ctor: '::',
				_0: _user$project$View$hintsButton(model.hints),
				_1: {ctor: '[]'}
			}
		});
	var buttonArea = A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: menuButtons,
			_1: {
				ctor: '::',
				_0: wordListButtons,
				_1: {ctor: '[]'}
			}
		});
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: buttonArea,
			_1: {
				ctor: '::',
				_0: cardArea,
				_1: {
					ctor: '::',
					_0: infoArea,
					_1: {ctor: '[]'}
				}
			}
		});
};
